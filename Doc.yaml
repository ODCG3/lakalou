openapi: 3.0.0
info:
  title: Tailor Social Network API
  description: API documentation for the Tailor Social Network
  version: 1.0.0

servers:
  - url: https://96a5-41-214-74-161.ngrok-free.app
    description: Local server

components:
  securitySchemes:
    CookieAuth:                 # Custom name for cookie-based auth
      type: apiKey
      in: cookie
      name: token  

security:
  - CookieAuth: [] 

paths:
  /user/changeRole:
    post:
      summary: change user role
      tags:
        - Role
        - Utilisateur      
      responses:
        '200':
          description: Role changed successfully
        '402':
          description: Vous n'avez pas assez de crédits pour changer de role
        '401':
          description: Unauthorized
        '500':
          description: Erreur lors de la modification du role de l'utilisateur

  /chargeCredit:
    post:
      summary: charger credit
      tags:
        - Credit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - credits
              properties:
                credits:
                  type: number

      responses:
        '200':
          description: Credit charged successfully
        '400':
          description: Vous n'êtes pas connecté en tant que tailleur
        '401':
          description: Unauthorized
        '402':
          description: Vous devez saisir un montant valide 1000, 2000 ou 3000
        '500':
          description: Erreur lors de la modification du role de l'utilisateur   

  /acheter-badge:
    post:
      summary: acheter un badge
      tags:
        - Badge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - credits
              properties:
                credits:
                  type: number

      responses:
        '200':
          description: Badge obtenu avec succes
        '400':
          description: User not found
        '401':
          description: Unauthorized
        '403':
          description: Vous devez avoir au moins 100 follower pour acheter un badge
        '405':
          description: Badge déjà acquis
        '406':
          description: Crédit insuffisant
        '500':
          description: Erreur lors de la creation du badge   
  
  /user/{userID}/bloquer:
     post:
      summary: bloquer un utilisateur
      tags:
        - Bloquer
      parameters:
        - in : path
          name: userID
          schema: 
            type: string
          required: true
          description: the id of the post to view
      responses:
        '200':
          description: Utilisateur bloqué avec succès
        '400':
          description: Utilisateur non trouvé
        '401':
          description: Unauthorized
        '403':
          description: Vous ne pouvez pas vous bloquer vous-même
        '402':
          description: Vous avez déjà bloqué cet utilisateur
        '406':
          description: Crédit insuffisant
        '500':
          description: Erreur lors de la creation du badge

  /user/{userID}/debloquer:
     post:
      summary: debloquer un utilisateur
      tags:
        - DeBloquer
      parameters:
        - in : path
          name: userID
          schema: 
            type: string
          required: true
          description: the id of the post to view
      responses:
        '200':
          description: Utilisateur debloqué avec succès
        '400':
          description: Utilisateur non trouvé
        '401':
          description: Unauthorized
        '402':
          description: cet utilisateur n'a pas ete bloquer
        '500':
          description: Erreur lors du deblocage de l'utilisateur

  /post/{postId}:
     post:
      summary: marquer post comme vue
      tags:
        - vues
        - Post
      parameters:
        - in : path
          name: postId
          schema: 
            type: string
          required: true
          description: the id of the post to view
      
      responses:
        '200':
          description: Post viewed successfully
        '400':
          description: Post not found
        '401':
          description: Unauthorized
        '500':
          description: Erreur lors du deblocage de l'utilisateur

  /post/{postId}/commande:
    post:
      summary: Commander
      tags:
        - Commander a partir d'un post
      parameters:
        - in : path
          name: storyId
          schema: 
            type: string
          required: true
          description: the id of the story to commande
        - in : path
          name: postId
          schema: 
            type: string
          required: true
          description: the id of the post to commande
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - adresseLivraison
              properties:
                adresseLivraison:
                  type: string
      responses:
        '201':
          description: commande created successfully
        '400':
          description: Post not found
        '401':
          description: Unauthorized
        '402':
          description: Modèle non trouvé dans le post
        '403':
          description: Vous ne pouvez pas commander sur votre propre post
        '500':
          description: Le modèle n'est plus disponible
  
  /post/{storyId}/commande:
    post:
      summary: Commander
      tags:
        - Commander a partir d'un story
      parameters:
        - in : path
          name: storyId
          schema: 
            type: string
          required: true
          description: the id of the story to commande
        - in : path
          name: postId
          schema: 
            type: string
          required: true
          description: the id of the post to commande
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - adresseLivraison
              properties:
                adresseLivraison:
                  type: string
      responses:
        '201':
          description: commande created successfully
        '400':
          description: Story not found
        '401':
          description: Unauthorized
        '402':
          description: Modèle non trouvé dans le story
        '403':
          description: Vous ne pouvez pas commander sur votre propre story
        '500':
          description: Le modèle n'est plus disponible

  /model/{userId}/getModels:
    get:
      summary: Afficher tous les models d'un utilisateur
      tags:
        - Model
      parameters:
        - in: path
          name: userId
          schema: 
            type: string
          required: true
          description: ID de l'utilisateur dont on veut afficher les models
      responses:
        '200':
          description: Voici les models de l'utilisateur
        '400':
          description: ID de l'utilisateur est recquis

  /model/{modelId}/update:
    put: 
      summary: Modifier Un modèle
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema: 
            type: string
          required: true
          description: ID du modèle à modifier
      responses:
        '200':
          description: 'ID modèle valide !'
        '400':
          description: 'ID modèle invalide'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                prix:
                  type: number

  /model/{modelId}/delete:
    delete:
      summary: Supprimer un modèle de la base de données
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema: 
            type: string
          required: true
          description: ID du modèle à supprimer
      responses:
        '200':
          description: Modèle supprimé avec succès
        '400':
          description: ID modèle invalide

  /model/{modelId}:
    get:
      summary: Afficher un modèle en particulier
      tags:
      - Model
      parameters:
        - in: path
          name: modelId            
          schema: 
            type: string
          required: true
          description: ID du modèle à récupérer
      responses:
        '200':
          description: ID modèle valide
        '400':
          description: ID modèle invalide

  /register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - role
                - nom
                - prenom
                - confimationPassword
                - photoProfile
              properties:
                nom:
                  type: string
                email:
                  type: string
                password:
                  type: string
                prenom: 
                  type: string
                role:
                  type: string
                  enum:
                    - tailleur
                    - visiteur
                confirmationPassword:
                  type: string
                photoProfile:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Tous les champs sont obligatoires
        '401':
          description: Le mot de passe doit contenir au moins 8 caractères
        '403':
          description: Le rôle doit être 'tailleur' ou 'visiteur'
        '405':
          description: Les mots de passe ne correspondent pas
        '406':
          description: Invalid field
        '407':
          description: Cet email est déjà utilisé
        '500':
          description: Erreur lors de l'enregistrement de l'utilisateur
          
  /login:
    post:
      summary: Log in a user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Invalid credentials
          
  /logout:
    post:
      summary: Log out the current user
      tags:
        - User
      responses:
        '200':
          description: User logged out successfully

  /follow/{id}:
    post:
      summary: Follow a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to follow
      responses:
        '201':
          description: Follower ajouté avec succès !
        '401':
          description: Unauthorized
        '400':
          description: Id non trouve
        '402':
          description: Vous ne pouvez pas suivre un visiteur
        '403':
          description: Pour follow un autre utilisateur veuillez recharger vos credits
        '500':
          description: Erreur ajout follower

  /unfollow/{id}:
    post:
      summary: Unfollow a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to unfollow
      responses:
        '201':
          description: Unfollowing ajouté avec succès !
        '401':
          description: Unauthorized
        '400':
          description: Id non trouve
        '500':
          description: Erreur unFollower

  /add-note/{id}:
    post:
      summary: Add a note to a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to add a note to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rate
              properties:
                rate:
                  type: integer
                  description: The note to add
      responses:
        '200':
          description: Note ajoutée avec succès
        '401':
          description: Unauthorized
        '400':
          description: La note doit être un nombre entre 1 et 5
        '402':
          description: Vous ne pouvez pas noter un visiteur
        '403':
          description: Utilisateur non trouvé
        '500':
          description: Erreur ajout note

  /signal/{id}:
    post:
      summary: Report a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: Reason for reporting the user
      responses:
        '200':
          description: User reported successfully
        '401':
          description: Unauthorized
        '400':
          description: la raison du signalement est requise
        '402':
          description: Utilisateur non trouvé
        '403':
          description: Vous ne pouvez pas vous signaler vous-même
        '500':
          description: Erreur création signalement
        '405':
          description: Vous avez déjà signalé cet utilisateur

  /model/create:
    post:
      summary: Create a new model
      tags:
        - Model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - libelle
                - prix
                - quantite
                - contenu
              properties:
                libelle:
                  type: string
                prix:
                  type: number
                quantite:
                  type: number
                contenu:
                  type: array
      responses:
        '201':
          description: Model created successfully
        '400':
          description: Ce model existe deja
        '401':
          description: Unauthorized
        '500':
          description: Error creating model

  /model/{modelId}/note:
    post:
      summary: Add a note to a model
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema:
            type: string
          required: true
          description: ID of the model to add a note to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - note
              properties:
                note:
                  type: integer
                  description: The note to add
      responses:
        '200':
          description: Note added successfully
        '401':
          description: Unauthorized
        '402':
          description: User not found
        '403':
          description: model not found
        '500':
          description: Error adding mark to a model

  /model/{modelId}/unlike:
    post:
      summary: Unlike a model
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema:
            type: string
          required: true
          description: ID of the model to unlike
      responses:
        '200':
          description: Model unliked successfully
        '401':
          description: Unauthorized

  /post/create:
    post:
      summary: Create a new post
      tags:
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - description
                - titre
              properties:
                model:
                  type: string
                description:
                  type: string
                titre:
                  type: string
      responses:
        '201':
          description: Post created successfully
        '402':
          description: Vous n'êtes pas un tailleur , seul les tailleur peuvent cree des postes
        '401':
          description: Unauthorized
        '403':
          description: Vous n'avez pas assez de credit pour poster  veuillez recharger votre compte
        '500':
          description: Error Server

  /post/favorite/create/{id}:
    post:
      summary: Add a post to favorites
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the post to add to favorites
      responses:
        '200':
          description: Post added to favorites successfully
        '401':
          description: Unauthorized
        '402':
          description: Post not found
        '400':
          description: Post already marked as favorite
        '500':
          description: Failed to mark favorite

  /post/favorite/remove/{id}:
    post:
      summary: Remove a post from favorites
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the post to remove from favorites
      responses:
        '200':
          description: Favorite removed to post successfully
        '401':
          description: Unauthorized
        '400':
          description: Favorite not found
        '500':
          description: Error server

    delete:
      summary: Remove a post from the user's favorites
      tags:
        - Favorite
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique ID of the favorite post to remove
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: JWT authentication token
      responses:
        '200':
          description: Favorite removed successfully
        '401':
          description: Unauthorized, authentication required
        '404':
          description: Favorite not found
        '500':
          description: Internal server error

  /post/{postId}/like:
    post:
      summary: Like a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to like
      responses:
        '200':
          description: Post liked successfully
        '401':
          description: Unauthorized
        '400':
          description: Vous avez deja liker le post
        '500':
          description: Erreur lors du like de post
    get:
      summary: Récuperer tous les likes d'un post 
      tags:
        - Like
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID du post
      responses:
        '200':
          description: Lister les likes return successfully
        '401':
          description: Unauthorized 

  /post/{postId}/like/{likeID}/unlike:
    post:
      summary: Unlike a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post
        - in: path
          name: likeID
          schema:
            type: string
          required: true
          description: ID of the like to remove
      responses:
        '200':
          description: Like retirer avec succes
        '400':
          description: Vous n'avez pas aimer ce post
        '401':
          description: Unauthorized
        '500':
          description: Erreur lors du unlike du post

  /post/{postId}/Dislike:
    post:
      summary: Dislike a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to dislike
      responses:
        '200':
          description: Post disliked successfully
        '400':
          description: Vous avez deja disliké le post
        '401':
          description: Unauthorized
        '500':
          description: Error when disliking the post

    get:
      summary: Récuperer tous les dislike d'un poste 
      tags:
        - Dislike
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID Du post
      responses:
        '200':
          description: liste des dislike  successfully
        '401':
          description: Unauthorized

  /post/{postId}/dislike/{dislikeID}/undislike:
    post:
      summary: Remove a dislike from a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post
        - in: path
          name: dislikeID
          schema:
            type: string
          required: true
          description: ID of the dislike to remove
      responses:
        '200':
          description: Dislike removed successfully
        '400':
          description: Vous n'avez pas disliké ce post
        '401':
          description: Unauthorized
        '500':
          description: Error when removing the dislike from the post

  /post/{postId}/comment:
    post:
      summary: Add a comment to a post
      tags:
        - Comment
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to comment on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: The comment content
      responses:
        '201':
          description: Comment added successfully
        '400':
          description: Post non trouvee
        '401':
          description: Unauthorized
        '500':
          description: Error creating comment
    get:
      summary: Récuprere tous les  commentaire d'un post
      tags:
        - Comment
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID du post
      responses:
        '200':
          description: Lister les commentaire
        '401':
          description: Unauthorized
    delete:
      summary: Supprimer un commentaire
      tags:
        - Comment
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
          description: ID du commentair qu'on va supprimer 
      responses:
        '200':
          description: commentair supprimmer avec succe
        '401':
          description: Unauthorized      

  /story/create:
    post:
      summary: Create a new story
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - modelID
                - description
                - blockedUsers
              properties:
                modelID:
                  type: string
                description:
                  type: string
                blockedUsers:
                  type: array
      responses:
        '201':
          description: Story created successfully
        '400':
          description: Model non trouvee
        '402':
          description: Credit insuffisant pour creer un story
        '403':
          description: Vous n'etes pas un tailleur seul les tailleurs post des status
        '401':
          description: Unauthorized
        '500':
          description: Error creating story

  /story/{id}/view:
    post:
      summary: Increment views for a story
      tags:
        - Story
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the story
      responses:
        '200':
          description: Story view incremented successfully
        '401':
          description: Unauthorized
        '400':
          description: Story non trouvee
        '500':
          description: Erreur lors du vue du status

  /commande/{commandeId}:
    get:
      summary: Récuperer une commande spécifique grace à son  ID
      tags:
        - Commande
      parameters:
        - in: path
          name: commandeId
          schema:
            type: string
          required: true
          description: ID de la  commande
      responses:
        '200':
          description: Commande retouver avec successfully
        '401':
          description: Unauthorized

  /post/{postId}/commandes:
    get:
      summary: touver tous les commandes d'un post
      tags:
        - Commande
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID du post
      responses:
        '200':
          description: Lister les commandes trouver
        '401':
          description: Unauthorized
  
  /user/{id}/updateMeasurements:
    put:
      summary: Mettre à jour les mesures d'un utilisateur
      tags:
        - Utilisateur
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de l'utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - modelID
                - description
                - blockedUsers
              properties:
                cou:
                  type: number
                  description: Tour de cou
                longueurPantallon:
                  type: number
                  description: Longueur du pantalon
                epaule:
                  type: number
                  description: Largeur des épaules
                longueurManche:
                  type: number
                  description: Longueur de la manche
                hanche:
                  type: number
                  description: Tour de hanche
                poitrine:
                  type: number
                  description: Tour de poitrine
                cuisse:
                  type: number
                  description: Tour de cuisse
                longueur:
                  type: number
                  description: Longueur totale
                tourBras:
                  type: number
                  description: Tour de bras
                tourPoignet:
                  type: number
                  description: Tour de poignet
                ceinture:
                  type: number
                  description: Tour de taille
      responses:
        '200':
          description: Mesures mises à jour avec succès
        '400':
          description: Requête incorrecte, erreur de validation
        '404':
          description: Utilisateur non trouvé
        '500':
          description: Erreur interne du serveur

  /post:
    get:
      summary: Retrieve all posts
      tags:
        - Post
      responses:
        '200':
          description: List of posts retrieved successfully
        '401':
          description: Unauthorized, authentication required
        '500':
          description: Internal server error


  /post/{id}:
    get:
      summary: Retrieve a post by its ID
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique ID of the post
      responses:
        '200':
          description: Post retrieved successfully
        '401':
          description: Unauthorized, authentication required
        '404':
          description: Post not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a post by its ID
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique ID of the post to delete
      responses:
        '200':
          description: Post deleted successfully
        '401':
          description: Unauthorized, authentication required
        '404':
          description: Post not found or not accessible by the user
        '500':
          description: Internal server error


  /post/{id}/model:
    get:
      summary: Retrieve the model associated with a post
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Unique ID of the post
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: JWT authentication token
      responses:
        '200':
          description: Model retrieved successfully
        '401':
          description: Unauthorized, authentication required
        '404':
          description: Post or model not found
        '500':
          description: Internal server error

  /user/bloquer:
    get:
      summary: Retrieve a list of blocked users for the authenticated user
      tags:
        - User
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: JWT authentication token
      responses:
        '200':
          description: List of blocked users retrieved successfully
        '401':
          description: Unauthorized, authentication required
        '404':
          description: User not found
        '500':
          description: Internal server error

  /post/{postId}/vues:
    get:
      summary: Retrieve the number of views for a specific post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: Unique ID of the post
      responses:
        '200':
          description: Number of views for the post
        '401':
          description: Unauthorized, authentication required
        '404':
          description: Post not found
        '500':
          description: Internal server error

  /user/discussion/{discussionId}/messages/{messageId}:
    delete:
      summary: Delete a specific message from a discussion
      tags:
        - User
      parameters:
        - in: path
          name: discussionId
          schema:
            type: string
          required: true
          description: Unique ID of the discussion from which the message will be deleted
        - in: path
          name: messageId
          schema:
            type: string
          required: true
          description: Unique ID of the message to be deleted
      responses:
        '200':
          description: Message deleted successfully
        '400':
          description: Bad request, user not found
        '404':
          description: Message or discussion not found
        '500':
          description: Internal server error

    put:
      summary: Update a specific message in a discussion
      tags:
        - User
      parameters:
        - in: path
          name: discussionId
          schema:
            type: string
          required: true
          description: Unique ID of the discussion containing the message
        - in: path
          name: messageId
          schema:
            type: string
          required: true
          description: Unique ID of the message to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - newContent
              properties:
                newContent:
                  type: string
      responses:
        '200':
          description: Message updated successfully
        '400':
          description: Bad request, user not found
        '404':
          description: Discussion or message not found or update failed
        '500':
          description: Internal server error

  /notifications:
    get:
      summary: Retrieve notifications for the authenticated user
      tags:
        - Notifications
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: JWT authentication token
      responses:
        '200':
          description: Successfully retrieved notifications
        '404':
          description: User not found
        '500':
          description: Internal server error

  /notifications/{notificationId}:
    delete:
      summary: Remove a specific notification for the authenticated user
      tags:
        - Notifications
      parameters:
        - in: path
          name: notificationId
          schema:
            type: string
          required: true
          description: Unique ID of the notification to be removed
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: JWT authentication token
      responses:
        '200':
          description: Notification removed successfully
        '404':
          description: User not found or notification not found
        '500':
          description: Internal server error

  /stories/{userId}:
      get:
        summary: Get all stories of a user
        tags:
          - Story
        parameters:
          - in: path
            name: userId
            schema:
              type: string
            required: true
            description: ID of the user whose stories are being retrieved
        responses:
          '200':
            description: List of stories retrieved successfully
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      userId:
                        type: string
                      model:
                        type: string
                      description:
                        type: string
                      views:
                        type: integer
                      expiresAt:
                        type: string
                        format: date-time
          '500':
            description: Internal server error

  /story/{id}/delete:
      delete:
        summary: Delete a story
        tags:
          - Story
        parameters:
          - in: path
            name: id
            schema:
              type: string
            required: true
            description: ID of the story to be deleted
        responses:
          '200':
            description: Story supprimée avec succès
          '404':
            description: Story non trouvée ou vous n\'êtes pas autorisé à la supprimer
          '500':
            description: Internal server error

  /story/{id}/views:
      get:
        summary: Récupérer le nombre de vues pour une story
        tags:
          - Story
        parameters:
          - in: path
            name: id
            schema:
              type: string
            required: true
            description: ID of the story
        responses:
          '200':
            description: Nombre de vues de la story récupéré avec succès
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    views:
                      type: integer
                      description: Number of views for the story
          '404':
            description: La story n'a pas été trouvée.
          '500':
            description: Une erreur interne est survenue. Veuillez réessayer plus tard.

  /tailleurs/filterCertificat:
      get:
        summary: Filtrer les tailleurs ayant un certificat
        tags:
          - Tailleurs
        security:
          - bearerAuth: []  # Assurez-vous que l'authentification est définie correctement dans votre spécification OpenAPI
        responses:
          '200':
            description: Liste des tailleurs ayant un certificat récupérée avec succès
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            description: ID du tailleur
                          nom:
                            type: string
                            description: Nom du tailleur
                          prenom:
                            type: string
                            description: Prénom du tailleur
                          email:
                            type: string
                            description: Email du tailleur
                          photoProfile:
                            type: string
                            description: URL de la photo de profil du tailleur
                          '401':
                            description: L'utilisateur n'est pas premium et ne peut pas effectuer cette action
                          '500':
                            description: Une erreur interne est survenue. Veuillez réessayer plus tard.

  /tailleurs/statistique:
      get:
        summary: Obtenir les statistiques des tailleurs
        tags:
          - Tailleurs
        security:
          - bearerAuth: []  # Assurez-vous que l'authentification est définie correctement dans votre spécification OpenAPI
        responses:
          '200':
            description: Statistiques récupérées avec succès
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    mostSoldModel:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            description: ID du modèle
                          nom:
                            type: string
                            description: Nom du modèle
                          nombreDeCommande:
                            type: integer
                            description: Nombre de commandes pour ce modèle
                    mostViewedPosts:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            description: ID du post
                          titre:
                            type: string
                            description: Titre du post
                          vues:
                            type: array
                            items:
                              type: string
                            description: Liste des vues du post
                          viewsCount:
                            type: integer
                            description: Nombre de vues calculé pour le post
                    salesToPostsRatio:
                      type: string
                      description: Ratio des ventes par rapport aux posts, exprimé en pourcentage
          '401':
            description: L'utilisateur n'est pas premium et ne peut pas effectuer cette action
          '500':
            description: Une erreur interne est survenue. Veuillez réessayer plus tard.
