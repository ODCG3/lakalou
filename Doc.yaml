openapi: 3.0.0
info:
  title: Tailor Social Network API
  description: API documentation for the Tailor Social Network
  version: 1.0.0

paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
          
  /login:
    post:
      summary: Log in a user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Invalid credentials
          
  /logout:
    post:
      summary: Log out the current user
      tags:
        - User
      responses:
        '200':
          description: User logged out successfully

  /follow/{id}:
    post:
      summary: Follow a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to follow
      responses:
        '200':
          description: User followed successfully
        '401':
          description: Unauthorized

  /unfollow/{id}:
    post:
      summary: Unfollow a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to unfollow
      responses:
        '200':
          description: User unfollowed successfully
        '401':
          description: Unauthorized

  /add-note/{id}:
    post:
      summary: Add a note to a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to add a note to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: integer
                  description: The note to add
      responses:
        '200':
          description: Note added successfully
        '401':
          description: Unauthorized

  /signal/{id}:
    post:
      summary: Report a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for reporting the user
      responses:
        '200':
          description: User reported successfully
        '401':
          description: Unauthorized

  /model/create:
    post:
      summary: Create a new model
      tags:
        - Model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                userId:
                  type: string
      responses:
        '201':
          description: Model created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /model/{modelId}/note:
    post:
      summary: Add a note to a model
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema:
            type: string
          required: true
          description: ID of the model to add a note to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: integer
                  description: The note to add
      responses:
        '200':
          description: Note added successfully
        '401':
          description: Unauthorized

  /model/{modelId}/unlike:
    post:
      summary: Unlike a model
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema:
            type: string
          required: true
          description: ID of the model to unlike
      responses:
        '200':
          description: Model unliked successfully
        '401':
          description: Unauthorized

  /post/create:
    post:
      summary: Create a new post
      tags:
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                userId:
                  type: string
      responses:
        '201':
          description: Post created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /post/favorite/create/{id}:
    post:
      summary: Add a post to favorites
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the post to add to favorites
      responses:
        '200':
          description: Post added to favorites successfully
        '401':
          description: Unauthorized

  /post/favorite/remove/{id}:
    post:
      summary: Remove a post from favorites
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the post to remove from favorites
      responses:
        '200':
          description: Post removed from favorites successfully
        '401':
          description: Unauthorized

  /post/{postId}/like:
    post:
      summary: Like a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to like
      responses:
        '200':
          description: Post liked successfully
        '401':
          description: Unauthorized

  /post/{postId}/like/{likeID}/unlike:
    post:
      summary: Unlike a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post
        - in: path
          name: likeID
          schema:
            type: string
          required: true
          description: ID of the like to remove
      responses:
        '200':
          description: Post unliked successfully
        '401':
          description: Unauthorized

  /post/{postId}/Dislike:
    post:
      summary: Dislike a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to dislike
      responses:
        '200':
          description: Post disliked successfully
        '401':
          description: Unauthorized

  /post/{postId}/dislike/{dislikeID}/undislike:
    post:
      summary: Remove a dislike from a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post
        - in: path
          name: dislikeID
          schema:
            type: string
          required: true
          description: ID of the dislike to remove
      responses:
        '200':
          description: Dislike removed successfully
        '401':
          description: Unauthorized

  /post/{postId}/comment:
    post:
      summary: Add a comment to a post
      tags:
        - Comment
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to comment on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The comment content
      responses:
        '201':
          description: Comment added successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /story/create:
    post:
      summary: Create a new story
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Story created successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /story/{id}/view:
    post:
      summary: Increment views for a story
      tags:
        - Story
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the story
      responses:
        '200':
          description: Story view incremented successfully
        '401':
          description: Unauthorized

/stories/{userId}:
    get:
      summary: Get all stories of a user
      tags:
        - Story
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID of the user whose stories are being retrieved
      responses:
        '200':
          description: List of stories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    userId:
                      type: string
                    model:
                      type: string
                    description:
                      type: string
                    views:
                      type: integer
                    expiresAt:
                      type: string
                      format: date-time
        '500':
          description: Internal server error

/story/{id}/delete:
    delete:
      summary: Delete a story
      tags:
        - Story
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the story to be deleted
      responses:
        '200':
          description: Story supprimée avec succès
        '404':
          description: Story non trouvée ou vous n\'êtes pas autorisé à la supprimer
        '500':
          description: Internal server error

/story/{id}/view:
    post:
      summary: Increment views for a story
      tags:
        - Story
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the story
      responses:
        '200':
          description: Story view incremented successfully
        '404':
          description: La story n\'a pas été trouvée.
        '500':
          description: Une erreur interne est survenue. Veuillez réessayer plus tard.

/story/{id}/views:
    get:
      summary: Récupérer le nombre de vues pour une story
      tags:
        - Story
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the story
      responses:
        '200':
          description: Nombre de vues de la story récupéré avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  views:
                    type: integer
                    description: Number of views for the story
              '404':
                description: La story n'a pas été trouvée.
              '500':
                description: Une erreur interne est survenue. Veuillez réessayer plus tard.
paths:
/tailleurs/filterCertificat:
    get:
      summary: Filtrer les tailleurs ayant un certificat
      tags:
        - Tailleurs
      security:
        - bearerAuth: []  # Assurez-vous que l'authentification est définie correctement dans votre spécification OpenAPI
      responses:
        '200':
          description: Liste des tailleurs ayant un certificat récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: ID du tailleur
                        nom:
                          type: string
                          description: Nom du tailleur
                        prenom:
                          type: string
                          description: Prénom du tailleur
                        email:
                          type: string
                          description: Email du tailleur
                        photoProfile:
                          type: string
                          description: URL de la photo de profil du tailleur
                        '401':
                          description: L'utilisateur n'est pas premium et ne peut pas effectuer cette action
                        '500':
                          description: Une erreur interne est survenue. Veuillez réessayer plus tard.

paths:
/tailleurs/statistique:
    get:
      summary: Obtenir les statistiques des tailleurs
      tags:
        - Tailleurs
      security:
        - bearerAuth: []  # Assurez-vous que l'authentification est définie correctement dans votre spécification OpenAPI
      responses:
        '200':
          description: Statistiques récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  mostSoldModel:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: ID du modèle
                        nom:
                          type: string
                          description: Nom du modèle
                        nombreDeCommande:
                          type: integer
                          description: Nombre de commandes pour ce modèle
                  mostViewedPosts:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: ID du post
                        titre:
                          type: string
                          description: Titre du post
                        vues:
                          type: array
                          items:
                            type: string
                          description: Liste des vues du post
                        viewsCount:
                          type: integer
                          description: Nombre de vues calculé pour le post
                  salesToPostsRatio:
                    type: string
                    description: Ratio des ventes par rapport aux posts, exprimé en pourcentage
        '401':
          description: L'utilisateur n'est pas premium et ne peut pas effectuer cette action
        '500':
          description: Une erreur interne est survenue. Veuillez réessayer plus tard.
                           