openapi: 3.0.0
info:
  title: Tailor Social Network API
  description: API documentation for the Tailor Social Network
  version: 1.0.0

servers:
  - url: https://96a5-41-214-74-161.ngrok-free.app
    description: Local server

components:
  securitySchemes:
    CookieAuth:                 # Custom name for cookie-based auth
      type: apiKey
      in: cookie
      name: token  

security:
  - CookieAuth: [] 

paths:
/model:

  /{userId}/getModels:
    get:
      summary: Afficher tous les models d'un utilisateur
        tags:
          - Model
        parameters:
          - in: path
          name: userId
          schema: string
          required: true
          description: ID de l'utilisateur dont on veut afficher les models
        responses:
          '200':
            description: Voici les models de l'utilisateur
          '400':
            description: ID de l'utilisateur est recquis

  /{modelId}/update:
    put: 
      summary: Modifier Un modèle
      tags:
        - Model
      parameters:
        - in: path
        name: modelId
        schema: string
        required: true
        description: ID du modèle à modifier
        responses:
          '200':
            description: 'ID modèle valide !'
          '400':
            description: 'ID modèle invalide'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
              libelle:
                type: string
              prix:
                type: number
      responses:
        '200':
          description: Modèle modifié avec succès !
        '400':
          description: Erreur de modification du modèle

  /{modelId}/delete:
    delete:
      summary: Supprimer un modèle de la base de données
        tags:
          - Model
          parameters:
            - in: path
            name: modelId
            schema: string
            required: true
            description: ID du modèle à supprimer
            response:
              '200':
                description: Modèle supprimé avec succès
               '400':
                description: ID modèle invalide

  /{modelId}:
    get:
      summary: Afficher un modèle en particulier
      tags:
      - Model
      parameters:
       - in: path
      name: modelId            
      schema: string
      required: true
      description: ID du modèle à récupérer
      responses:
        '200':
          description: ID modèle valide
        '400':
          description: ID modèle invalide

  /register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - role
                - nom
                - prenom
                - confimationPassword
                - photoProfile
              properties:
                nom:
                  type: string
                email:
                  type: string
                password:
                  type: string
                prenom: 
                  type: string
                role:
                  type: string
                  enum:
                    - tailleur
                    - visiteur
                confirmationPassword:
                  type: string
                photoProfile:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Tous les champs sont obligatoires
        '401':
          description: Le mot de passe doit contenir au moins 8 caractères
        '403':
          description: Le rôle doit être 'tailleur' ou 'visiteur'
        '405':
          description: Les mots de passe ne correspondent pas
        '406':
          description: Invalid field
        '407':
          description: Cet email est déjà utilisé
        '500':
          description: Erreur lors de l'enregistrement de l'utilisateur
          
  /login:
    post:
      summary: Log in a user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Invalid credentials
          
  /logout:
    post:
      summary: Log out the current user
      tags:
        - User
      responses:
        '200':
          description: User logged out successfully

  /follow/{id}:
    post:
      summary: Follow a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to follow
      responses:
        '201':
          description: Follower ajouté avec succès !
        '401':
          description: Unauthorized
        '400':
          description: Id non trouve
        '402':
          description: Vous ne pouvez pas suivre un visiteur
        '403':
          description: Pour follow un autre utilisateur veuillez recharger vos credits
        '500':
          description: Erreur ajout follower

  /unfollow/{id}:
    post:
      summary: Unfollow a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to unfollow
      responses:
        '201':
          description: Unfollowing ajouté avec succès !
        '401':
          description: Unauthorized
        '400':
          description: Id non trouve
        '500':
          description: Erreur unFollower

  /add-note/{id}:
    post:
      summary: Add a note to a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to add a note to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rate
              properties:
                rate:
                  type: integer
                  description: The note to add
      responses:
        '200':
          description: Note ajoutée avec succès
        '401':
          description: Unauthorized
        '400':
          description: La note doit être un nombre entre 1 et 5
        '402':
          description: Vous ne pouvez pas noter un visiteur
        '403':
          description: Utilisateur non trouvé
        '500':
          description: Erreur ajout note

  /signal/{id}:
    post:
      summary: Report a user
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the user to report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: Reason for reporting the user
      responses:
        '200':
          description: User reported successfully
        '401':
          description: Unauthorized
        '400':
          description: la raison du signalement est requise
        '402':
          description: Utilisateur non trouvé
        '403':
          description: Vous ne pouvez pas vous signaler vous-même
        '500':
          description: Erreur création signalement
        '405':
          description: Vous avez déjà signalé cet utilisateur

  /model/create:
    post:
      summary: Create a new model
      tags:
        - Model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - libelle
                - prix
                - quantite
                - contenu
              properties:
                libelle:
                  type: string
                prix:
                  type: number
                quantite:
                  type: number
                contenu:
                  type: array
      responses:
        '201':
          description: Model created successfully
        '400':
          description: Ce model existe deja
        '401':
          description: Unauthorized
        '500':
          description: Error creating model

  /model/{modelId}/note:
    post:
      summary: Add a note to a model
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema:
            type: string
          required: true
          description: ID of the model to add a note to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - note
              properties:
                note:
                  type: integer
                  description: The note to add
      responses:
        '200':
          description: Note added successfully
        '401':
          description: Unauthorized
        '402':
          description: User not found
        '403':
          description: model not found
        '500':
          description: Error adding mark to a model

  /model/{modelId}/unlike:
    post:
      summary: Unlike a model
      tags:
        - Model
      parameters:
        - in: path
          name: modelId
          schema:
            type: string
          required: true
          description: ID of the model to unlike
      responses:
        '200':
          description: Model unliked successfully
        '401':
          description: Unauthorized

  /post/create:
    post:
      summary: Create a new post
      tags:
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - description
                - titre
              properties:
                model:
                  type: string
                description:
                  type: string
                titre:
                  type: string
      responses:
        '201':
          description: Post created successfully
        '402':
          description: Vous n'êtes pas un tailleur , seul les tailleur peuvent cree des postes
        '401':
          description: Unauthorized
        '403':
          description: Vous n'avez pas assez de credit pour poster  veuillez recharger votre compte
        '500':
          description: Error Server

  /post/favorite/create/{id}:
    post:
      summary: Add a post to favorites
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the post to add to favorites
      responses:
        '200':
          description: Post added to favorites successfully
        '401':
          description: Unauthorized
        '402':
          description: Post not found
        '400':
          description: Post already marked as favorite
        '500':
          description: Failed to mark favorite

  /post/favorite/remove/{id}:
    post:
      summary: Remove a post from favorites
      tags:
        - Post
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the post to remove from favorites
      responses:
        '200':
          description: Favorite removed to post successfully
        '401':
          description: Unauthorized
        '400':
          description: Favorite not found
        '500':
          description: Error server

  /post/{postId}/like:
    post:
      summary: Like a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to like
      responses:
        '200':
          description: Post liked successfully
        '401':
          description: Unauthorized
        '400':
          description: Vous avez deja liker le post
        '500':
          description: Erreur lors du like de post
    get:
      summary: Récuperer tous les likes d'un post 
      tags:
        - Like
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID du post
      responses:
        '200':
          description: Lister les likes return successfully
        '401':
          description: Unauthorized 

  /post/{postId}/like/{likeID}/unlike:
    post:
      summary: Unlike a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post
        - in: path
          name: likeID
          schema:
            type: string
          required: true
          description: ID of the like to remove
      responses:
        '200':
          description: Like retirer avec succes
        '400':
          description: Vous n'avez pas aimer ce post
        '401':
          description: Unauthorized
        '500':
          description: Erreur lors du unlike du post

  /post/{postId}/Dislike:
    post:
      summary: Dislike a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to dislike
      responses:
        '200':
          description: Post disliked successfully
        '400':
          description: Vous avez deja disliké le post
        '401':
          description: Unauthorized
        '500':
          description: Error when disliking the post

    /post/{postId}/Dislike:
        get:
          summary: Récuperer tous les dislike d'un poste 
          tags:
            - Dislike
          parameters:
            - in: path
              name: postId
              schema:
                type: string
              required: true
              description: ID Du post
          responses:
            '200':
              description: liste des dislike  successfully
            '401':
              description: Unauthorized

  /post/{postId}/dislike/{dislikeID}/undislike:
    post:
      summary: Remove a dislike from a post
      tags:
        - Post
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post
        - in: path
          name: dislikeID
          schema:
            type: string
          required: true
          description: ID of the dislike to remove
      responses:
        '200':
          description: Dislike removed successfully
        '400':
          description: Vous n'avez pas disliké ce post
        '401':
          description: Unauthorized
        '500':
          description: Error when removing the dislike from the post

  /post/{postId}/comment:
    post:
      summary: Add a comment to a post
      tags:
        - Comment
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID of the post to comment on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: The comment content
      responses:
        '201':
          description: Comment added successfully
        '400':
          description: Post non trouvee
        '401':
          description: Unauthorized
        '500':
          description: Error creating comment
    get:
      summary: Récuprere tous les  commentaire d'un post
      tags:
        - Comment
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID du post
      responses:
        '200':
          description: Lister les commentaire
        '401':
          description: Unauthorized
    delete:
      summary: Supprimer un commentaire
      tags:
        - Comment
      parameters:
        - in: path
          name: commentId
          schema:
            type: string
          required: true
          description: ID du commentair qu'on va supprimer 
      responses:
        '200':
          description: commentair supprimmer avec succe
        '401':
          description: Unauthorized      

  /story/create:
    post:
      summary: Create a new story
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - modelID
                - description
                - blockedUsers
              properties:
                modelID:
                  type: string
                description:
                  type: string
                blockedUsers:
                  type: array
      responses:
        '201':
          description: Story created successfully
        '400':
          description: Model non trouvee
        '402':
          description: Credit insuffisant pour creer un story
        '403':
          description: Vous n'etes pas un tailleur seul les tailleurs post des status
        '401':
          description: Unauthorized
        '500':
          description: Error creating story

  /story/{id}/view:
    post:
      summary: Increment views for a story
      tags:
        - Story
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the story
      responses:
        '200':
          description: Story view incremented successfully
        '401':
          description: Unauthorized
        '400':
          description: Story non trouvee
        '500':
          description: Erreur lors du vue du status

  /commande/{commandeId}:
    get:
      summary: Récuperer une commande spécifique grace à son  ID
      tags:
        - Commande
      parameters:
        - in: path
          name: commandeId
          schema:
            type: string
          required: true
          description: ID de la  commande
      responses:
        '200':
          description: Commande retouver avec successfully
        '401':
          description: Unauthorized

  /post/{postId}/commandes:
    get:
      summary: touver tous les commandes d'un post
      tags:
        - Commande
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: ID du post
      responses:
        '200':
          description: Lister les commandes trouver
        '401':
          description: Unauthorized
